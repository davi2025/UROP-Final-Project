import scipy as sc
import numpy as np

from scipy.integrate import odeint


def lorenz(x,sigma=1,rho=1,beta=1,t=None):
    dxdt = sigma*(x[1]-x[0])
    dydt = x[0]*(rho-x[2])-x[1]
    dzdt = x[0]*x[1] - beta*x[2]
    return np.array([dxdt,dydt,dzdt])


c_0 = np.array([1,1,1])
#set time function for intervals
t = np.linspace(0,20,1000)

def odesolver(lorenz):
    return odeint(lorenz,c_0, t)
#wants it to be one dimensional 
x = lorenz
print(odesolver(x))


from matplotlib import pyplot as plt
m = odesolver(x)
xval = m[:,0]
yval = m[:,1]
zval = m[:,2]

plt.axes(projection='3d').scatter3D(xval,yval,zval,t)


